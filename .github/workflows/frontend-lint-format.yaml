name: Frontend

on:
  pull_request:
    branches: [ "*" ]

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      working-directory: ./MtdrSpring/frontend
      run: bun install

    - name: Run ESLint
      working-directory: ./MtdrSpring/frontend
      run: |
        echo "::group::ESLint Results"
        bun lint || echo "::error::ESLint found errors"
        echo "::endgroup::"
        
        # Save detailed output to file
        bun lint --format json > eslint-report.json 2>&1 || true
        
        # Show summary in annotations
        if [ -f eslint-report.json ]; then
          echo "::group::ESLint Summary"
          cat eslint-report.json | jq -r '.[].messages[] | "::error file=\(.line)::\(.message)"' 2>/dev/null || cat eslint-report.json
          echo "::endgroup::"
        fi
    
    - name: Upload ESLint report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: eslint-report
        path: MtdrSpring/frontend/eslint-report.json


  format:
    runs-on: ubuntu-latest
    # Run regardless of lint job outcome
    if: always()
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      working-directory: ./MtdrSpring/frontend
      run: bun install

    - name: Check Prettier formatting
      working-directory: ./MtdrSpring/frontend
      run: |
        echo "::group::Prettier Check"
        if bunx prettier --check . --config .prettierrc; then
          echo "::notice::All files are properly formatted"
        else
          echo "::error::Formatting issues found. Run 'bunx prettier --write .' to fix."
          bunx prettier --list-different . --config .prettierrc
        fi
        echo "::endgroup::"