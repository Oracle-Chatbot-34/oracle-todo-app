apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashmaster-backend
  namespace: default
  labels:
    app: dashmaster-backend
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dashmaster-backend
  template:
    metadata:
      labels:
        app: dashmaster-backend
        version: v1
    spec:
      containers:
      - name: dashmaster-backend
        image: mx-queretaro-1.ocir.io/ax6xpbwtbt9g/dashmaster-backend:latest
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "production"
        - name: TNS_ADMIN
          value: "/app/wallet"
        - name: ORACLE_TNS_ADMIN
          value: "/app/wallet"
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:oracle:thin:@javadev_high?TNS_ADMIN=/app/wallet"
        # Esta variable confirma explícitamente el context path
        - name: SERVER_SERVLET_CONTEXT_PATH
          value: "/api"
        - name: LOGGING_LEVEL_COM_SPRINGBOOT
          value: "INFO"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        # Health checks ajustados para el context path correcto
        livenessProbe:
          httpGet:
            path: /api/actuator/health
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: dashmaster-backend-service
  namespace: default
  labels:
    app: dashmaster-backend
spec:
  selector:
    app: dashmaster-backend
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
  type: ClusterIP
  sessionAffinity: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashmaster-frontend
  namespace: default
  labels:
    app: dashmaster-frontend
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dashmaster-frontend
  template:
    metadata:
      labels:
        app: dashmaster-frontend
        version: v1
    spec:
      containers:
      - name: dashmaster-frontend
        image: mx-queretaro-1.ocir.io/ax6xpbwtbt9g/dashmaster-frontend:latest
        ports:
        - containerPort: 80
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        # No configuramos URLs aquí porque nginx maneja todo el routing
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        # Health checks usando nuestro endpoint personalizado
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 101 # nginx user
---
apiVersion: v1
kind: Service
metadata:
  name: dashmaster-frontend-service
  namespace: default
  labels:
    app: dashmaster-frontend
spec:
  selector:
    app: dashmaster-frontend
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  type: LoadBalancer
  sessionAffinity: None