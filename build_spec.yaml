version: 0.1
component: build
timeoutInSeconds: 6000
runAs: root
shell: bash

steps:
  # Paso único que hace todo el proceso
  - type: Command
    name: "Complete build and push process"
    timeoutInSeconds: 3600
    command: |
      echo "=== PROCESO COMPLETO DE BUILD ==="
      echo "Timestamp: $(date)"
      echo "Build Run ID: ${OCI_BUILD_RUN_ID}"
      
      # Construir tags usando valores literales + la única variable que funciona
      BACKEND_FULL_TAG="mx-queretaro-1.ocir.io/ax6xpbwtbt9g/dashmaster-backend:${OCI_BUILD_RUN_ID}"
      FRONTEND_FULL_TAG="mx-queretaro-1.ocir.io/ax6xpbwtbt9g/dashmaster-frontend:${OCI_BUILD_RUN_ID}"
      
      echo "Backend tag: ${BACKEND_FULL_TAG}"
      echo "Frontend tag: ${FRONTEND_FULL_TAG}"
      
      cd ${OCI_PRIMARY_SOURCE_DIR}
      
      # BUILD BACKEND
      echo "=== CONSTRUYENDO BACKEND ==="
      cd MtdrSpring/backend
      docker build -t ${BACKEND_FULL_TAG} .
      
      if [ $? -eq 0 ]; then
        echo "✅ Backend construido exitosamente"
      else
        echo "❌ Error construyendo el backend"
        exit 1
      fi
      
      cd ${OCI_PRIMARY_SOURCE_DIR}
      
      # BUILD FRONTEND
      echo "=== CONSTRUYENDO FRONTEND ==="
      cd MtdrSpring/frontend
      docker build -t ${FRONTEND_FULL_TAG} .
      
      if [ $? -eq 0 ]; then
        echo "✅ Frontend construido exitosamente"
      else
        echo "❌ Error construyendo el frontend"
        exit 1
      fi
      
      cd ${OCI_PRIMARY_SOURCE_DIR}
      
      # MOSTRAR IMÁGENES CONSTRUIDAS
      echo "=== IMÁGENES CONSTRUIDAS ==="
      docker images | grep "mx-queretaro-1.ocir.io/ax6xpbwtbt9g"
      
      # PUSH A OCIR (repositorios públicos - no requiere login)
      echo "=== PUSHING A ORACLE CONTAINER REGISTRY (PÚBLICO) ==="
      echo "Los repositorios son públicos, no se requiere autenticación para push"
      
      # PUSH BACKEND directamente (sin login)
      echo "=== PUSHING BACKEND IMAGE ==="
      docker push ${BACKEND_FULL_TAG}
      
      if [ $? -eq 0 ]; then
        echo "✅ Backend image subida exitosamente: ${BACKEND_FULL_TAG}"
      else
        echo "❌ Error subiendo backend image"
        echo "Intentando con login básico..."
        # Si falla, intentar con login simple
        echo "guest" | docker login mx-queretaro-1.ocir.io --username guest --password-stdin 2>/dev/null || true
        docker push ${BACKEND_FULL_TAG}
        if [ $? -eq 0 ]; then
          echo "✅ Backend image subida exitosamente (segundo intento)"
        else
          exit 1
        fi
      fi
      
      # PUSH FRONTEND directamente (sin login)
      echo "=== PUSHING FRONTEND IMAGE ==="
      docker push ${FRONTEND_FULL_TAG}
      
      if [ $? -eq 0 ]; then
        echo "✅ Frontend image subida exitosamente: ${FRONTEND_FULL_TAG}"
      else
        echo "❌ Error subiendo frontend image"
        echo "Intentando con login básico..."
        # Si falla, intentar con login simple
        echo "guest" | docker login mx-queretaro-1.ocir.io --username guest --password-stdin 2>/dev/null || true
        docker push ${FRONTEND_FULL_TAG}
        if [ $? -eq 0 ]; then
          echo "✅ Frontend image subida exitosamente (segundo intento)"
        else
          exit 1
        fi
      fi
      
      # PREPARAR DEPLOYMENT MANIFEST
      echo "=== PREPARANDO DEPLOYMENT MANIFEST ==="
      if [ ! -f "deployment.yaml" ]; then
        echo "ERROR: deployment.yaml no encontrado"
        exit 1
      fi
      
      cp deployment.yaml ${OCI_WORKSPACE_DIR}/deployment.yaml
      echo "✅ Deployment manifest preparado"
      
      echo "=== PROCESO COMPLETADO EXITOSAMENTE ==="
      echo "Backend: ${BACKEND_FULL_TAG}"
      echo "Frontend: ${FRONTEND_FULL_TAG}"

outputArtifacts:
  - name: backend_image
    type: DOCKER_IMAGE
    location: mx-queretaro-1.ocir.io/ax6xpbwtbt9g/dashmaster-backend:${OCI_BUILD_RUN_ID}
  - name: frontend_image
    type: DOCKER_IMAGE
    location: mx-queretaro-1.ocir.io/ax6xpbwtbt9g/dashmaster-frontend:${OCI_BUILD_RUN_ID}
  - name: deployment_artifacts
    type: BINARY
    location: deployment.yaml