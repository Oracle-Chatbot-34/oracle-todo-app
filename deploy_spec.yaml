apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashmaster-backend
  namespace: default
  labels:
    app: dashmaster-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dashmaster-backend
  template:
    metadata:
      labels:
        app: dashmaster-backend
    spec:
      containers:
      - name: dashmaster-backend
        image: mx-queretaro-1.ocir.io/ax6xpbwtbt9g/dashmaster-backend:latest
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "production"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        # livenessProbe:
        #   httpGet:
        #     path: /api/actuator/health
        #     port: 8080
        #   initialDelaySeconds: 30
        #   periodSeconds: 30
        #   timeoutSeconds: 10
        #   failureThreshold: 3
        # readinessProbe:
        #   httpGet:
        #     path: /api/actuator/health
        #     port: 8080
        #   initialDelaySeconds: 25
        #   periodSeconds: 10
        #   timeoutSeconds: 5
        #   failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: dashmaster-backend-service
  namespace: default
spec:
  selector:
    app: dashmaster-backend
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashmaster-frontend
  namespace: default
  labels:
    app: dashmaster-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dashmaster-frontend
  template:
    metadata:
      labels:
        app: dashmaster-frontend
    spec:
      containers:
      - name: dashmaster-frontend
        image: mx-queretaro-1.ocir.io/ax6xpbwtbt9g/dashmaster-frontend:latest
        ports:
        - containerPort: 80
        env:
        - name: NODE_ENV
          value: "production"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        # livenessProbe:
        #   httpGet:
        #     path: /
        #     port: 80
        #   initialDelaySeconds: 30
        #   periodSeconds: 30
        # readinessProbe:
        #   httpGet:
        #     path: /
        #     port: 80
        #   initialDelaySeconds: 10
        #   periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: dashmaster-frontend-service
  namespace: default
spec:
  selector:
    app: dashmaster-frontend
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  type: LoadBalancer